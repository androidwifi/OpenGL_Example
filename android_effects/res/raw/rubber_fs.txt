
precision mediump float;

uniform vec3 uColor;
varying vec3 vPosition;
varying vec3 vNormal;

void main() {
	float diffuse = 0.0;
	float specular = 0.0;
	vec3 lightDir = vec3(0.0, 0.0, 10.0) - vPosition;
	vec3 N = normalize(vNormal);
	vec3 L = normalize(lightDir);			
	float lambert = dot(N, L);
	if (lambert > 0.0) {
		diffuse = lambert * 1.6;
		vec3 R = reflect(-L, N);
		vec3 E = normalize(-vPosition);
		specular = pow(max(dot(R, E), 0.0), 64.0) * 1.6;
	}
	gl_FragColor = vec4(uColor * (0.5 + diffuse + specular), 1.0);
}
