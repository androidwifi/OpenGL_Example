<html>
	<head>
  <title>Spinning WebGL Box</title><!--标题-->
	<script type="text/javascript" src="js/Matrix.js"></script>
	<script type="text/javascript" src="js/MatrixState.js"></script>	
	<script type="text/javascript" src="js/GLUtil.js"></script>
	<script type="text/javascript" src="js/ObjObject.js"></script>
	<script type="text/javascript" src="js/loadObject.js"></script>
	<script type="text/javascript" src="js/LoadObjUtil.js"></script>
	<script type="text/javascript" src="js/LoadShaderUtil.js"></script>
	
	<script>
	    //GLES上下文
	    var gl;
	    //变换矩阵管理类对象
	    var ms=new MatrixState();
	    //要绘制的3D物体-地球
	    var ooTri;
		//要绘制的3D物体-月球
	    var ooTri_Moon;
		//着色器程序列表，集中管理
		var shaderProgArray=new Array();
	    //地球纹理图
	    var earthTex;
		var earthTex1;//黑夜纹理图
	    //月球纹理图
	    var moonTex;
		
		var currentAngle=0;//地球自转角度
		
		var mPreviousY;//上次的触控位置Y坐标
		var mPreviousX;//上次的触控位置X坐标
		var down=false;//是否按下鼠标
		var TOUCH_SCALE_FACTOR=180.0/320;//旋转比例

		var yAngle=0;//光源绕y轴旋转的角度
		var xAngle=0;//摄像机绕X轴旋转的角度
		var sunx=100;//光源的x坐标
		var sunz=0;//光源的z坐标

		document.onmousedown = function(event)
		{
			mPreviousX=event.pageX;//获取触控点x坐标
			mPreviousY=event.pageY;//获取触控点y坐标
			down=true;//按下鼠标
		}
		document.onmousemove = function(event)//鼠标移动
		{	
			if(down)//已经按下鼠标
			{
				var moveX=event.pageX;//获取移动点x坐标
				var moveY=event.pageY;//获取移动点x坐标
				
				var dx = moveX- mPreviousX;//计算触控笔x位移
				yAngle += dx * TOUCH_SCALE_FACTOR;//设置光源绕y轴旋转的角度
				//触控横向位移，光源绕y轴旋转
				sunx=(Math.cos(0.017453*yAngle)*100);//计算光源的x坐标
				sunz=-(Math.sin(0.017453*yAngle)*100); //计算光源的z坐标
			
				
				var dy = moveY- mPreviousY;//计算触控笔y位移 
				xAngle += dy * TOUCH_SCALE_FACTOR;	//设置摄像机绕x轴旋转的角度
				if(xAngle>90)
				{
					xAngle=90;	//设置旋转的角度为90
				}
				else if(xAngle<-90)
				{
					xAngle=-90;	//设置旋转的角度为-90
				}
				//触控纵向位移，摄像机绕x轴旋转 -90～+90
				var cy=(50*Math.sin(0.017453*xAngle));//计算摄像机的y坐标
				var cz=(50*Math.cos(0.017453*xAngle));//计算摄像机的z坐标
				var upy= Math.cos(0.017453*xAngle);
				var upz=- Math.sin(0.017453*xAngle);
				ms.setCamera(0, cy, cz, 0, 0, 0, 0, upy, upz); 	//设置摄像机位置
			}
			mPreviousX=event.pageX;	//记录此次触控点的x坐标
			mPreviousY=event.pageY;	//记录此次触控点的y坐标
		}
		document.onmouseup = function(event)
		{
			mPreviousX=event.pageX;//获取抬起点x坐标
			mPreviousY=event.pageY;//获取抬起点y坐标
			down=false;//抬起鼠标
		}
	
	    //初始化的方法
	    function start()
	    {    		        
	        //获取GLES上下文
	        gl = initWebGLCanvas("bncanvas");
	        if (!gl) //若获取GLES上下文失败
	        {
	        	 alert("创建GLES上下文失败!");//显示错误提示信息
	           return;
	        }    
	        //获取3D Canvas
	        var canvas = document.getElementById('bncanvas');

	
	        //设置视口
	        gl.viewport(0, 0, canvas.width, canvas.height);
	        //设置屏幕背景色RGBA
	        gl.clearColor(0.0,0.0,0.0,1.0);  
	        //初始化变换矩阵
	        ms.setInitStack();
	        //设置摄像机
	        ms.setCamera(0,0,50,0,0,-1,0,1,0);
			//设置投影参数
	        ms.setProjectFrustum(-1.5,1.5,-1,1,3,200);
	        gl.enable(gl.DEPTH_TEST);//开启深度检测
	
			//加载着色器程序
			loadShaderFile("shader/shader.bns",0);//地球着色器程序
			loadShaderFile("shader/shader_Moon.bns",1);//月球着色器程序
			//创建绘制用的物体
			loadObjFile("obj/earth.obj",0);//矩形绘制对象--ooTri 
			loadObjFile("obj/earth.obj",1);//矩形绘制对象--ooTri_Moon 			
	        
	        //初始化旋转角度
	        currentAngle = 0;
	        
	        //加载地球纹理图
	        earthTex=loadImageTexture(gl, "pic/earth.png");
			earthTex1=loadImageTexture(gl, "pic/earthn.png");
			//加载月球纹理图
	        moonTex=loadImageTexture(gl, "pic/moon.png");
	        
	        //定时绘制画面
	        setInterval("drawFrame();",100);
	    }
	    
	    //绘制一帧画面的方法
	    function drawFrame()
	    {
			if((!ooTri)||(!ooTri_Moon))
			{
				return;
			}
	        //清除着色缓冲与深度缓冲
	        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);  
	        
	        //保护现场
	        ms.pushMatrix();         
	        //绕Y轴旋转
	        ms.rotate(currentAngle,0,1,0);
			//绘制地球
			ooTri.drawSelfEarth(ms,earthTex,earthTex1);
			//沿X轴推远
			ms.translate(10,0,0);
			//绕Y轴旋转
	        ms.rotate(currentAngle,0,1,0);
	        //缩放
	        ms.scale(0.5,0.5,0.5);
	        //绘制月球
	        ooTri_Moon.drawSelfMoon(ms,moonTex);
			//恢复现场
			ms.popMatrix();
          
			//修改旋转角度
			currentAngle=(currentAngle+2)%360             
	    }   
	</script>
</head>

<body onload="start();">
	<canvas height="800" width="1200" id="bncanvas">
	    若看到这个文字，说明浏览器不支持WebGL!
	</canvas>
</body>
</html>